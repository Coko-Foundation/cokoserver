services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - filehosting
      - createbucket
    command: ['yarn', 'coko-server', 'start-dev']
    ports:
      - ${SERVER_PORT:-3000}:${SERVER_PORT:-3000}
      - ${INSPECTOR_PORT:-9229}:${INSPECTOR_PORT:-9229}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NODE_CONFIG_DIR=./dev/config
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-test}
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_ALLOW_SELF_SIGNED_CERTIFICATES=${POSTGRES_ALLOW_SELF_SIGNED_CERTIFICATES}
      - POSTGRES_CA_CERT=${POSTGRES_CA_CERT}
      - SUBSCRIPTIONS_POSTGRES_DB=${SUBSCRIPTIONS_POSTGRES_DB}
      - SECRET=${SECRET:-theSecret}
      - SERVER_PORT=${SERVER_PORT:-3000}
      - ALLOW_CONFIG_MUTATIONS=${ALLOW_CONFIG_MUTATIONS:-''}
      # - CLIENT_URL=${CLIENT_URL:-http://0.0.0.0:4000////}
      # - SERVER_URL=http://www.google.com///
      # - MAILER_SENDER=${MAILER_SENDER:-dev@example.com}
      # - MAILER_HOSTNAME=${MAILER_HOSTNAME}
      # - MAILER_PORT=${MAILER_PORT}
      # - MAILER_USER=${MAILER_USER}
      # - MAILER_PASSWORD=${MAILER_PASSWORD}
      - S3_URL=${S3_URL:-http://filehosting:9000}
      - S3_BUCKET=${S3_BUCKET:-uploads}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-cokoServerUser}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY:-superSecretUserPassword}
      # - MAXIMUM_WIDTH_FOR_MEDIUM_IMAGES=100
      # - S3_SEPARATE_DELETE_OPERATIONS=true
      # - S3_FORCE_PATH_STYLE=true
      - INSPECTOR_PORT=${INSPECTOR_PORT:-9229}
      # - CORS_ORIGIN=https://studio.apollographql.com
    volumes:
      - ./dev:/home/node/app/dev
      - ./src:/home/node/app/src
      - ./authorization.js:/home/node/app/authorization.js
    tty: true

  db:
    image: postgres:15
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-test}
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}

  filehosting:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    ports:
      - ${S3_PORT:-9000}:9000
      - ${MINIO_CONSOLE_PORT:-9001}:9001
    volumes:
      - minio_storage:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-admin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-superSecretAdminPassword}
    command: server --console-address ":${MINIO_CONSOLE_PORT:-9001}" /data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 0.5s
      timeout: 20s
      retries: 30

  createbucket:
    image: minio/mc:RELEASE.2025-04-16T18-13-26Z
    depends_on:
      filehosting:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        /usr/bin/mc config host add cokoServer ${S3_PROTOCOL:-http}://${S3_HOST:-filehosting}:9000 ${MINIO_ROOT_USER:-admin} ${MINIO_ROOT_PASSWORD:-superSecretAdminPassword};
        /usr/bin/mc admin user add cokoServer/ ${S3_ACCESS_KEY_ID:-cokoServerUser} ${S3_SECRET_ACCESS_KEY:-superSecretUserPassword};
        /usr/bin/mc admin user enable cokoServer/ ${S3_ACCESS_KEY_ID:-cokoServerUser};
        /usr/bin/mc mb cokoServer/${S3_BUCKET:-uploads};
        /usr/bin/mc admin policy set cokoServer/ readwrite user=${S3_ACCESS_KEY_ID:-cokoServerUser};
        exit 0;
      "

volumes:
  minio_storage:
